<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.toolchain.linux.configuration.debug.2030690938">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.toolchain.linux.configuration.debug.2030690938" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.toolchain.nvccErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" description="" id="com.nvidia.cuda.toolchain.linux.configuration.debug.2030690938" name="Debug" optionalBuildProperties="" parent="com.nvidia.cuda.toolchain.linux.configuration.debug">
					<folderInfo id="com.nvidia.cuda.toolchain.linux.configuration.debug.2030690938." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.toolchain.linux.debugToolchain.1013891592" name="CUDA Linux toolchain" superClass="com.nvidia.cuda.toolchain.linux.debugToolchain">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="com.nvidia.cuda.toolchain.targetLinuxPlatform.1518197030" isAbstract="false" osList="linux" superClass="com.nvidia.cuda.toolchain.targetLinuxPlatform"/>
							<builder buildPath="${workspace_loc:/cuDDM}/Debug" id="com.nvidia.cuda.toolchain.builder.881124713" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit Builder" superClass="com.nvidia.cuda.toolchain.builder"/>
							<tool id="nvcc.linker.1235525967" name="NVCC linker" superClass="nvcc.linker">
								<inputType id="com.nvidia.cuda.toolchain.nvcc.linker.input.1249913661" superClass="com.nvidia.cuda.toolchain.nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.2126922267" name="NVCC archiver" superClass="nvcc.archiver"/>
							<tool id="nvcc.compiler.499665952" name="NVCC Compiler" superClass="nvcc.compiler">
								<option defaultValue="true" id="com.nvidia.cuda.toolchain.compiler.device-debug.414522061" name="Generate debug information for device code (-G)" superClass="com.nvidia.cuda.toolchain.compiler.device-debug" useByScannerDiscovery="false" valueType="boolean"/>
								<option defaultValue="true" id="com.nvidia.cuda.toolchain.compiler.debug.2122974794" name="Generate debug information for host code (-g)" superClass="com.nvidia.cuda.toolchain.compiler.debug" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="nvcc.compiler.pic.302388677" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" useByScannerDiscovery="false"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.compiler.include.paths.1948180922" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${cuda_samples_dir:/cuDDM}/0_Simple&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${cuda_samples_dir:/cuDDM}/common/inc&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/cuDDM}&quot;"/>
								</option>
								<inputType id="com.nvidia.cuda.toolchain.input.c.997172568" name="C" superClass="com.nvidia.cuda.toolchain.input.c"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cu.2120850047" name="CUDA" superClass="com.nvidia.cuda.toolchain.input.cu"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cpp.2079585617" name="C++" superClass="com.nvidia.cuda.toolchain.input.cpp"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.toolchain.linux.configuration.release.110431324">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.toolchain.linux.configuration.release.110431324" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.toolchain.nvccErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" description="" id="com.nvidia.cuda.toolchain.linux.configuration.release.110431324" name="Release" parent="com.nvidia.cuda.toolchain.linux.configuration.release">
					<folderInfo id="com.nvidia.cuda.toolchain.linux.configuration.release.110431324." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.toolchain.linux.releaseToolchain.1041090203" name="CUDA Linux toolchain" superClass="com.nvidia.cuda.toolchain.linux.releaseToolchain">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="com.nvidia.cuda.toolchain.targetLinuxPlatform.51306800" isAbstract="false" osList="linux" superClass="com.nvidia.cuda.toolchain.targetLinuxPlatform"/>
							<builder buildPath="${workspace_loc:/cuDDM}/Release" id="com.nvidia.cuda.toolchain.builder.235691254" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit Builder" superClass="com.nvidia.cuda.toolchain.builder"/>
							<tool id="nvcc.linker.348886276" name="NVCC linker" superClass="nvcc.linker">
								<inputType id="com.nvidia.cuda.toolchain.nvcc.linker.input.1028049231" superClass="com.nvidia.cuda.toolchain.nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.755622100" name="NVCC archiver" superClass="nvcc.archiver"/>
							<tool id="nvcc.compiler.290432947" name="NVCC Compiler" superClass="nvcc.compiler">
								<option defaultValue="com.nvidia.cuda.toolchain.compiler.optimization.level3" id="com.nvidia.cuda.toolchain.compiler.optimization.1389056856" name="Optimization level" superClass="com.nvidia.cuda.toolchain.compiler.optimization" useByScannerDiscovery="false" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1118375400" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" useByScannerDiscovery="false"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.compiler.include.paths.1342754047" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${cuda_samples_dir:/cuDDM}/0_Simple&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${cuda_samples_dir:/cuDDM}/common/inc&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/cuDDM}&quot;"/>
								</option>
								<inputType id="com.nvidia.cuda.toolchain.input.c.939917557" name="C" superClass="com.nvidia.cuda.toolchain.input.c"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cu.1195560508" name="CUDA" superClass="com.nvidia.cuda.toolchain.input.cu"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cpp.1510255149" name="C++" superClass="com.nvidia.cuda.toolchain.input.cpp"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="cuDDM.com.nvidia.cuda.toolchain.linux.build.exe.724914020" name="Executable" projectType="com.nvidia.cuda.toolchain.linux.build.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
</cproject>